{"ast":null,"code":"var _jsxFileName = \"/Users/donhutkhavy/boxchat/src/components/MainContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { SelectedContext } from './SelectedContext';\nimport './MainContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContent = () => {\n  _s();\n  var _agentsByTechnology$s;\n  const {\n    selectedItem,\n    selectedTechnology,\n    setSelectedTechnology,\n    addAgent,\n    agentsByTechnology\n  } = useContext(SelectedContext);\n  const [newAgent, setNewAgent] = useState('');\n  const handleTechnologyClick = technology => {\n    setSelectedTechnology(technology);\n    if (technology && newAgent) {\n      addAgent(technology, newAgent);\n      setNewAgent(''); // Clear the input field after adding\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ChatGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-body\",\n      children: selectedItem ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"message-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Type your message for ${selectedItem}...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"technology-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose a Technology\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleTechnologyClick('PDF Ai PDF'),\n            children: \"PDF Ai PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleTechnologyClick('Kraftful product coach'),\n            children: \"Kraftful product coach\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleTechnologyClick('Consensus'),\n            children: \"Consensus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), selectedTechnology && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-agent\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a new agent\",\n            value: newAgent,\n            onChange: e => setNewAgent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleTechnologyClick(selectedTechnology),\n            children: \"Add Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), selectedTechnology && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agents-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Available Agents for \", selectedTechnology]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (_agentsByTechnology$s = agentsByTechnology[selectedTechnology]) === null || _agentsByTechnology$s === void 0 ? void 0 : _agentsByTechnology$s.map(agent => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: agent\n            }, agent, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(MainContent, \"dXkXjI21UANSn44s/H9CofLs1qE=\");\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useContext","useState","SelectedContext","jsxDEV","_jsxDEV","MainContent","_s","_agentsByTechnology$s","selectedItem","selectedTechnology","setSelectedTechnology","addAgent","agentsByTechnology","newAgent","setNewAgent","handleTechnologyClick","technology","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","value","onChange","e","target","map","agent","_c","$RefreshReg$"],"sources":["/Users/donhutkhavy/boxchat/src/components/MainContent.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { SelectedContext } from './SelectedContext';\nimport './MainContent.css';\n\nconst MainContent = () => {\n  const { selectedItem, selectedTechnology, setSelectedTechnology, addAgent, agentsByTechnology } = useContext(SelectedContext);\n  const [newAgent, setNewAgent] = useState('');\n\n  const handleTechnologyClick = (technology) => {\n    setSelectedTechnology(technology);\n    if (technology && newAgent) {\n      addAgent(technology, newAgent);\n      setNewAgent(''); // Clear the input field after adding\n    }\n  };\n\n  return (\n    <div className=\"main-content\">\n      <div className=\"content-header\">\n        <h1>ChatGPT</h1>\n      </div>\n      <div className=\"content-body\">\n        {selectedItem ? (\n          <form className=\"message-input\">\n            <input\n              type=\"text\"\n              placeholder={`Type your message for ${selectedItem}...`}\n            />\n            <button type=\"submit\">Send</button>\n          </form>\n        ) : (\n          <div className=\"technology-options\">\n            <h2>Choose a Technology</h2>\n            <ul>\n              <li onClick={() => handleTechnologyClick('PDF Ai PDF')}>\n                PDF Ai PDF\n              </li>\n              <li onClick={() => handleTechnologyClick('Kraftful product coach')}>\n                Kraftful product coach\n              </li>\n              <li onClick={() => handleTechnologyClick('Consensus')}>\n                Consensus\n              </li>\n            </ul>\n            {selectedTechnology && (\n              <div className=\"add-agent\">\n                <input \n                  type=\"text\" \n                  placeholder=\"Add a new agent\" \n                  value={newAgent} \n                  onChange={(e) => setNewAgent(e.target.value)} \n                />\n                <button onClick={() => handleTechnologyClick(selectedTechnology)}>Add Agent</button>\n              </div>\n            )}\n            {selectedTechnology && (\n              <div className=\"agents-list\">\n                <h3>Available Agents for {selectedTechnology}</h3>\n                <ul>\n                  {agentsByTechnology[selectedTechnology]?.map(agent => (\n                    <li key={agent}>\n                      {agent}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}